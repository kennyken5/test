# プログラムの動作原理

日経BPパソコンベストムック
矢沢久雄セレクション
プログラムの動作原理
2016年

初出
第一章　日経ソフトウェア　2004年9月号
第二章　日経ソフトウェア　2012年6月号から2013年5月号まで
第三章　日経ソフトウェア　2002年7月号から2003年5月号まで


## 第一章　図で理解するＯＳの基本機能

### ポイント１　シェルとシステムコール

かつて、それはこの世にOSが生まれる前のことであるが、
なんらかのプログラムを作ると、それをコンピュータに読み込むプログラムも毎回書かねばならなかった。
後者はローダーと呼ばれる。これをどくりつさせる形で初期のＯＳは生み出された。

現在エンドユーザーはＯＳを直接使う。これにはシェルスクリプト使いも含む。
プログラマはアプリケーションを作る。

エンドユーザがＯＳ機能を使うための窓口をshellという。
winは２種類のshellを持つ。cuiとguiである。
またエンドユーザーがshellに与える命令は大きく二つに分類できる。
ひとつはプログラムを起動すること。もうひとつはシェル自体が提供する機能をつかうこと。
cuiならコマンドを入力し、guiならマウスやKBで操作する。

プログラマがＯＳの機能を利用するための窓口は、
システムコールないしＡＰＩ（アプリケーションプログラミングインターフェイス）という。
プログラマは一般にＯＳ上で動くプログラムを作る。
このようなプログラムをアプリケーションと呼ぶ。
アプリはＯＳ機能を使って間接的にハードウェアを使うので、
プログラマにはハードウェアの知識がなくてもプログラムを作れるのである。

シェルスクリプトはＯＳの機能をつかう一種のプログラムであり、
ＯＳによって解釈実行される。


### ポイント２　プロセス管理

winはマルチタスクのＯＳをうたっている。
しかしＣＰＵがひとつしかないＰＣではまったく同時に複数のプログラムを実行できない。
複数のプログラムを数十ミリ秒程度の時間で切り替えて実行しているのである。

ユーザーから見たものがタスクであり、ＯＳから見たものはプロセスである。

ひとつのアプリケーションはひとつのプロセスから構成されているのがふつうだが、
二つ以上のプロセスから構成することもできる。

ＯＳの機能を使わない限り、プロセス境界を越えてプロセス同士が勝手にデータをやり取りすることはできない。
ＯＳの機能を使ってプロセス同士がデータをやり取りすることを「プロセス間通信」という。
winプログラマが利用しやすいのは共有メモリとDDEだ。
前者の代表はクリップボードである。後者はメッセージを使って実現する。
簡単に言えば関数呼び出しのことである。


### ポイント３　メモリー管理と仮想記憶

実記憶（実メモリ）：実際に装備されている物理的なメモリー。32ビットCPU時代はMAXで4GBだった。
仮想記憶（ハードディスク）：



### ポイント４　デバイス・ドライバー

### ポイント５　ファイル・システム

### ポイント６　通信ネットワーク制御

### ポイント７　ユーザー官吏とセキュリティ






## 第二章　ＯＳとＣ言語の関係をきちんと学ぶ

hello world が表示されるまで

## 第三章　コンピュータは難しくない



